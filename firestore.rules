rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public reading of trips data
    match /trips/{tripId} {
      allow read: if true;
      // Only allow trip creation if authenticated
      allow create: if request.auth != null;
      // Only allow updates and deletes by the user who created the trip
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.driverId;
    }
    
    // Users can read and write their own data
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reviews can be read by anyone, but only written by authenticated users
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Bookings rules
    match /bookings/{bookingId} {
      // Cualquier usuario autenticado puede leer bookings
      allow read: if request.auth != null;
      
      // Only authenticated users can create bookings
      allow create: if request.auth != null;
      
      // Bookings can be updated by the user who created them or the trip driver
      allow update: if request.auth != null && (
                      request.auth.uid == resource.data.userId || 
                      exists(/databases/$(database)/documents/trips/$(resource.data.tripId)) && 
                      get(/databases/$(database)/documents/trips/$(resource.data.tripId)).data.driverId == request.auth.uid
                    );
      
      // Only the user who created the booking can delete it
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}